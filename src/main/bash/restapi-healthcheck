The Mesos /DCOS COMMAND health check is started from within the docker container.
But I don't get which sh it is using because it does not seem to work the same way
depending from where it's started...
so, it's doing something like that /bin/sh "..... command "
and using the return code as health check output.
So I wanted to do something like that:

a=$(curl ${HOST}:${PORT2}/api/v1/experiments | jq '.[] | length > 0') \
&& if [[ $a == 'true' ]]; then exit 0; else exit 1; fi

or

a=$(curl ${HOST}:${PORT2}/api/v1/experiments | jq '.[] | length > 0') \
&& if [ $a == 'true' ]; then exit 0; else exit 1; fi

or

a=$(curl ${HOST}:${PORT2}/api/v1/experiments | jq '.[] | length > 0') \
&& if [ \"$a\" == 'true' ]; then exit 0; else exit 1; fi

or

a=$(curl ${HOST}:${PORT2}/api/v1/experiments | jq '.[] | length > 0') \
&& if [ \"$a\" -eq 'true' ]; then exit 0; else exit 1; fi

but none of that seem to work, always getting:

curl: symbol lookup error: curl: undefined symbol: curl_mime_type

sh: 1: [[: not found
or not unary operator (probably because sometimes $a is empty...)

so I don't know for now how to fix this...

so I keep:
curl ${HOST}:${PORT2}/api/v1/experiments | jq '.[] | length > 0' // it will not fail because of the length check because in the worst case it returns false but exit value 0...
but if will fail in case of timeout on the rest api call, which is enough (for now) to decide that the job is failing!





