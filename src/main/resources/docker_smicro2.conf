// to be started with -Dconfig.resource=ubuntu_desktop.conf

include "application"

arcite {
  home = /home/deffabe1/arcite/testdata/${arcite.home_name}
  logs = ${arcite.home}/logs
  snapshot = ${arcite.home}/${arcite.snapshot_name}
  file_service {
    snapshot = ${arcite.home}/${arcite.file_service.snapshot_name}
  }

  mounts = [
    {name = "microarray1", description = "agilent microarray scanner", path = "/home/deffabe1/arcite/testdata/microarrays/raw_data"}
  ]
}

http {
  host = "127.0.0.1"
  port = 62600
}

akka {
  remote.netty.tcp {
    hostname = "127.0.0.1"      # external (logical) hostname
    port = 62601 #5555
    # external (logical) port
  }
}

transform_worker {
  akka {

    actor.provider = "akka.cluster.ClusterActorRefProvider"

    remote.netty.tcp.port = 0
    remote.netty.tcp.hostname = 127.0.0.1

  }
  contact-points = [
    "akka.tcp://ArcTransfActClustSys@127.0.0.1:62602", #3551
    "akka.tcp://ArcTransfActClustSys@127.0.0.1:62603"] #3552
}

transform_cluster {
  akka {

    actor.provider = "akka.cluster.ClusterActorRefProvider"

    remote.netty.tcp.port = 0
    remote.netty.tcp.hostname = 127.0.0.1

    remote.netty.tcp.bind-hostname = "0.0.0.0" # internal (bind) hostname


    cluster {
      seed-nodes = [
        "akka.tcp://ArcTransfActClustSys@127.0.0.1:62602",
        "akka.tcp://ArcTransfActClustSys@127.0.0.1:62603"]

      auto-down-unreachable-after = 10s
    }

    extensions = ["akka.cluster.client.ClusterClientReceptionist"]

    persistence {
      journal.plugin = "akka.persistence.journal.leveldb-shared"
      journal.leveldb-shared.store {
        # DO NOT USE 'native = off' IN PRODUCTION !!!
        native = off
        dir = "target/shared-journal"
      }
      snapshot-store.plugin = "akka.persistence.snapshot-store.local"
      snapshot-store.local.dir = "target/snapshots"
    }

    # Sigar native library extract location during tests.
    # Note: use per-jvm-instance folder when running multiple jvm on one host.
    akka.cluster.metrics.native-library-extract-folder = ${user.dir}/target/native

    # Disable legacy metrics in akka-cluster.
    akka.cluster.metrics.enabled = off

    # Enable metrics extension in akka-cluster-metrics.
    akka.extensions = ["akka.cluster.metrics.ClusterMetricsExtension"]
  }

  store = "127.0.0.1:3551/user/store"

  backends {
//    ports = ["3551", "3552", "3553", "3554", "3555", "3556", "3557", "3558", "3559"]
    ports = ["62602", "62603", "62604", "62605", "62606", "62607", "62608", "62609", "62610", "62611", "62612", "62613", "62614"]
  }

  frontends {
    numberOfports = 20
  }
}

experiments-manager {
  include "application" // todo only include the akka part for here

  akka {

    actor {
      provider = "akka.remote.RemoteActorRefProvider"
    }

    //    remote {
    enabled-transports = ["akka.remote.netty.tcp", "akka.remote.netty.NettyRemoteTransport"]

    remote {
      log-remote-lifecycle-events = on

      netty.tcp {
        hostname = "127.0.0.1"
        port = 62650 //4333
      }
    }

    uri = "akka.tcp://experiments-actor-system@127.0.0.1:62650"
  }
}

tree-of-transforms-actor-system {
  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"

    }

    enabled-transports = ["akka.remote.netty.tcp", "akka.remote.netty.NettyRemoteTransport"]

    remote {
      log-remote-lifecycle-events = on

      netty.tcp {
        hostname = "127.0.0.1"
        port = 62651
      }
    }

    uri = "akka.tcp://tree-of-transforms-actor-system@127.0.0.1:62651"
  }
}

meta-info-actor-system {
  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"
    }

    enabled-transports = ["akka.remote.netty.tcp", "akka.remote.netty.NettyRemoteTransport"]

    remote {
      log-remote-lifecycle-events = on

      netty.tcp {
        hostname = "127.0.0.1"
        port = 62652
      }
    }

    uri = "akka.tcp://meta-info-actor-system@127.0.0.1:62652"
  }
}

sharedJournal {
  port = 62652
}