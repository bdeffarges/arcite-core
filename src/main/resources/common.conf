//env="smicro2"
//env = "ubuntu_home"
//env= "bamboo"
env = "ubuntu_work"



arcite-core {
  akka {
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    loglevel = "DEBUG"
    stdout-loglevel = "DEBUG"
    event-handlers = ["akka.event.slf4j.Slf4jLogger"]
    //  log-config-on-start = "on"

    //    actor {
    //      provider = "akka.remote.RemoteActorRefProvider"
    //    }

    //    remote {
    //      enabled-transports = ["akka.remote.netty.tcp", "akka.remote.netty.NettyRemoteTransport"]
    //      netty.tcp {
    //        //      hostname = "CHALUW-DEV01"      # external (logical) hostname
    //        hostname = "127.0.0.1"      # external (logical) hostname
    //        port = 2552                   # external (logical) port
    //
    //        bind-hostname = "0.0.0.0" # internal (bind) hostname
    //        bind-port = 2552              # internal (bind) port
    //      }
    //    }
  }
}


// transformer cluster specification, actor can register in the cluster to provide a transform service
arcite.transform.cluster.system.name="ArciteTransClustSys"

transform-cluster-ctrl {
  akka {
    actor {
      provider = "akka.cluster.ClusterActorRefProvider"
    }
    remote {
      log-remote-lifecycle-events = off
      netty.tcp {
        hostname = "127.0.0.1"
        port = 0
      }
    }
    cluster {
      roles = ["transformers-ctrl"]
      seed-nodes = ["akka.tcp://arcite-transformers-cluster@127.0.0.1:60001"]

      auto-down-unreachable-after = 10s
    }
  }
}

transform-cluster-example {
  akka {
    actor {
      provider = "akka.cluster.ClusterActorRefProvider"
    }
    remote {
      log-remote-lifecycle-events = off
      netty.tcp {
        hostname = "127.0.0.1"
        port = 0
      }
    }
    cluster {
      roles = ["transf-services-text"]
      seed-nodes = ["akka.tcp://arcite-transformers-cluster@127.0.0.1:60001"]

      auto-down-unreachable-after = 10s
    }
  }
}

# Disable legacy metrics in akka-cluster.
akka.cluster.metrics.enabled = off

# Enable metrics extension in akka-cluster-metrics.
akka.extensions = ["akka.cluster.metrics.ClusterMetricsExtension"]

# Sigar native library extract location during tests.
# Note: use per-jvm-instance folder when running multiple jvm on one host.
akka.cluster.metrics.native-library-extract-folder = ${user.dir}/target/native
